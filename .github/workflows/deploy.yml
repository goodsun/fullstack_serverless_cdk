name: Deploy to AWS

on:
  push:
    branches:
      - develop
      - staging
      - production
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install root dependencies
      run: npm ci

    - name: Install frontend dependencies
      run: cd frontend && npm ci

    - name: Build backend
      run: npm run build

    - name: Build frontend
      run: npm run build:frontend

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'ap-northeast-1' }}

    - name: Set up environment
      run: |
        echo "PROJECT_NAME=${{ secrets.PROJECT_NAME }}" >> .env
        echo "AWS_REGION=${{ secrets.AWS_REGION || 'ap-northeast-1' }}" >> .env

    - name: CDK Bootstrap (if needed)
      run: |
        npx cdk bootstrap || echo "Bootstrap already exists"

    - name: Deploy to dev (develop branch)
      if: github.ref == 'refs/heads/develop'
      env:
        API_ENDPOINT: ${{ secrets.API_ENDPOINT_DEV }}
      run: |
        # Debug: Show environment variables
        echo "Environment: dev"
        echo "API_ENDPOINT from secret: ${API_ENDPOINT}"
        echo "PROJECT_NAME: ${{ secrets.PROJECT_NAME }}"
        
        # First deploy the CDK stack
        # Frontend is already built by npm run build:frontend
        npm run deploy:dev:base -- --require-approval never
        
        # Debug: Check if stack exists and get outputs
        STACK_NAME="$(echo ${{ secrets.PROJECT_NAME }} | awk '{print toupper(substr($0,1,1)) substr($0,2)}' | sed 's/-//g')-Dev"
        echo "Stack name: ${STACK_NAME}"
        
        if aws cloudformation describe-stacks --stack-name $STACK_NAME --region ${{ secrets.AWS_REGION || 'ap-northeast-1' }} >/dev/null 2>&1; then
          echo "Stack exists, getting outputs..."
          aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].Outputs[*].[OutputKey,OutputValue]' --output table --region ${{ secrets.AWS_REGION || 'ap-northeast-1' }}
        fi
        
        # Then update the frontend configuration with the API endpoint
        npm run update-config:dev

    - name: Deploy to staging (staging branch)
      if: github.ref == 'refs/heads/staging'
      run: |
        # First deploy the CDK stack
        # Frontend is already built by npm run build:frontend
        npm run deploy:staging:base -- --require-approval never
        # Then update the frontend configuration with the API endpoint
        npm run update-config:staging

    - name: Deploy to prod (production branch)
      if: github.ref == 'refs/heads/production'
      run: |
        # First deploy the CDK stack
        # Frontend is already built by npm run build:frontend
        npm run deploy:prod:base -- --require-approval never
        # Then update the frontend configuration with the API endpoint
        npm run update-config:prod

    - name: Show deployment outputs
      run: |
        echo "Deployment completed!"
        echo "Check AWS CloudFormation console for stack outputs"